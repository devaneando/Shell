;;;;;;;;;;;;;;;;;;
; Global Options ;
;;;;;;;;;;;;;;;;;;

[global]
pid                                         = /run/php/php5.6-fpm.pid

; Error log file
error_log                                   = /var/www/logs/fpm5.6.error.log

; [alert, error, warning, notice, debug]
log_level                                   = error

; If this number of child processes exit with SIGSEGV or SIGBUS within the time
; interval set by emergency_restart_interval then FPM will restart.
emergency_restart_threshold                 = 10

; Interval of time used by emergency_restart_interval to determine when
; a graceful restart will be initiated.  This can be useful to work around
; accidental corruptions in an accelerator's shared memory.
; Available Units: s(econds), m(inutes), h(ours), or d(ays)
emergency_restart_interval                  = 1m

; Time limit for child processes to wait for a reaction on signals from master.
; Available units: s(econds), m(inutes), h(ours), or d(ays)
process_control_timeout                     = 10s

; The maximum number of processes FPM will fork. This has been design to control
; the global number of processes when using dynamic PM within a lot of pools.
; Note: A value of 0 indicates no limit
process.max                                 = 20

; Set open file descriptor rlimit for the master process.
; Default Value: system defined value
rlimit_files                                = 4096

; Set max core size rlimit for the master process.
; Possible Values: 'unlimited' or an integer greater or equal to 0
rlimit_core                                 = 4096

; Specify the event mechanism FPM will use. The following is available:
events.mechanism                            = epoll

;;;;;;;;;;;;;;;;;;;;
; Pool Definitions ;
;;;;;;;;;;;;;;;;;;;;

include					                    =/etc/Lamp/PHP/fpm/pools-enabled/5.6/*.conf

