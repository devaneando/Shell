<?xml version="1.0" encoding="UTF-8"?>
<!--
Author: Michael Lee <deflect.4444@gmail.com>
Last updated: October 1, 2011
Compliant with all modern versions of Axe Parser up to 1.0.5


Copyright (c) 2011, Michael Lee
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, 
are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice, this 
  list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright notice, this 
  list of conditions and the following disclaimer in the documentation and/or 
  other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
OF SUCH DAMAGE.
-->

<language id="axe" _name="Axe Parser" version="2.0" _section="Sources">
    <metadata>
        <property name="mimetypes">text/axe</property>
        <property name="globs">*.axe</property>
        <property name="line-comment-start">.</property>
        <property name="block-comment-start">...</property>
        <property name="block-comment-ent">...</property>
    </metadata>

    <styles>
        <!-- Specials -->
        <style id="comment" _name="Comment" map-to="def:comment" />
        <style id="modifiers" _name="Modifiers" map-to="def:operator" />
        
        <!-- Base elements -->
        <style id="number" _name="Number" map-to="def:number" />
        <style id="binary" _name="Binary number" map-to="def:base-n-integer" />
        <style id="hexadecimal" _name="Hexadecimal number" map-to="def:base-n-integer" />
        <style id="string" _name="String" map-to="def:string" />

        <!-- Identifiers -->
        <style id="variables" _name="Variable" map-to="def:identifier" />
        <style id="constants" _name="Constants" map-to="def:constant" />
        <style id="buffers" _name="Buffers" map-to="def:special-constant" />
        <style id="functions" _name="Functions" map-to="def:special-constant" />
        
        <!-- Keywords -->
        <style id="preprocessor" _name="Preprocessor" map-to="def:preprocessor" />
        <style id="keywords" _name="Keywords" map-to="def:keyword" />
        <style id="io" _name="Input Output" map-to="def:builtin" />
        <style id="memory" _name="Memory manipulatives" map-to="def:statement" />
        <style id="operators" _name="Operators" map-to="def:operator" />
        <style id="misc" _name="Misc." map-to="def:statement" />
    </styles>

    

    <definitions>
        <!-- Modifiers -->
        <define-regex id="pi">(pi|pi^^|^^pi|π)</define-regex>
        <define-regex id="dereference">(^^o|o^^|°)</define-regex>
        <define-regex id="rmodifer">(r^^|^^r)</define-regex>
        <define-regex id="functionmodifier">L^^|^^L|smallL</define-regex>

        <!-- Base elements -->
        <define-regex id="number">(\~)?[0-9]+</define-regex>
        <define-regex id="hexadecimal">(([0-9]|[A-F]){2})+</define-regex>
        <define-regex id="string">\".+?(\"|$)</define-regex>

        <define-regex id="variable">([A-Z]{1})|(r[1-6])</define-regex>

        <context id="axe">
            <include>
                <!-- Base Elements -->
                <context id="binary" style-ref="binary">
                    <match>\%{pi}(0|1)+</match>
                </context>
                
                <context id="hex" style-ref="hexadecimal">
                    <match>\[\%{hexadecimal}+(\]|$|)</match>
                </context>

                <context id="string">
                    <match>\%{string}</match>
                </context>

                <!-- Identifiers -->
                <context id="constants" style-ref="constants">
                    <keyword>(Str|Pic|GDB)[0-9a-zA-Z]{1,4}</keyword>
                    <keyword>(pgrm|appv)[A-Z][0-9A-Z]{1,7}</keyword>
                    <keyword>\%{dereference}[0-9a-zA-Z]{1,5}</keyword>
                </context>

                <context id="buffers" style-ref="buffers">
                    <match>L[1-6]</match>
                </context>

                <context id="specials" style-ref="operators">
                    <match>(-&gt;|→)</match>
                </context>

                <!-- Keywords -->
                <context id="preprocessor" style-ref="preprocessor">
                    <keyword>#Axiom</keyword>
                    <keyword>#Icon\(\%{hexadecimal}{32}\)</keyword>
                    <keyword>#Realloc</keyword>
                    <keyword>DiagnosticOn</keyword>
                    <keyword>DiagnosticOff</keyword>
                    <keyword>Full</keyword>
                    <keyword>Normal</keyword>
                    <keyword>Fix [0-9]</keyword>
                    <keyword>Asm\(\%{hexadecimal}+\)</keyword>
                </context>

                <context id="keywords" style-ref="keywords">
                    <keyword>If</keyword>
                    <keyword>End</keyword>
                    <keyword>Else</keyword>
                    <keyword>!If</keyword>
                    <keyword>ElseIf</keyword>
                    <keyword>Else!If</keyword>
                    <keyword>While</keyword>
                    <keyword>Repeat</keyword>
                    <keyword>For</keyword>
                    <keyword>DS&gt;</keyword>
                    <keyword>Return</keyword>
                    <keyword>lambda|λ</keyword>
                    <keyword>\?</keyword>
                </context>
    
                <context id="io" style-ref="io">
                    <keyword>DispGraph</keyword>
                    <keyword>ClrDraw</keyword>
                    <keyword>DrawInv</keyword>
                    <keyword>StoreGDB</keyword>
                    <keyword>StorePic</keyword>
                    <keyword>RecallPic</keyword>
                    <keyword>Horizontal\s\+</keyword>
                    <keyword>Horizontal\s-</keyword>
                    <keyword>Vertical\s\+</keyword>
                    <keyword>Vertical\s-</keyword>
                    <keyword>Shade</keyword>
                    <keyword>Pxl-On</keyword>
                    <keyword>Pxl-Off</keyword>
                    <keyword>Pxl-Change</keyword>
                    <keyword>Pxl-Test</keyword>
                    <keyword>Line</keyword>
                    <keyword>Rect</keyword>
                    <keyword>RectI</keyword>
                    <keyword>Pt-On</keyword>
                    <keyword>Pt-Off</keyword>
                    <keyword>Pt-Change</keyword>
                    <keyword>pt-Get</keyword>
                    <keyword>Pt-Mask</keyword>
                    <keyword>Bitmap</keyword>
                    <keyword>rotC</keyword>
                    <keyword>rotCC</keyword>
                    <keyword>flipV</keyword>
                    <keyword>flipH</keyword>
                    <keyword>ClrHome</keyword>
                    <keyword>Disp</keyword>
                    <keyword>&gt;Dec|▶Dec</keyword>
                    <keyword>&gt;Char|▶Char</keyword>
                    <keyword>&gt;Tok|▶Tok</keyword>
                    <keyword>&gt;Hex|▶Hex</keyword>
                    <keyword>Output</keyword>
                    <keyword>Text</keyword>
                    <keyword>getKey</keyword>
                    <keyword>Freq</keyword>
                    <keyword>Send</keyword>
                    <keyword>Get</keyword>
                    <keyword>Port</keyword>
                </context>

                <context id="memory" style-ref="memory">
                    <keyword>sign</keyword>
                    <keyword>nib</keyword>
                    <keyword>Fill</keyword>
                    <keyword>Copy</keyword>
                    <keyword>Exch</keyword>
                    <keyword>length</keyword>
                    <keyword>inData</keyword>
                    <keyword>Equ&gt;String|Equ▶String</keyword>
                    <keyword>SortD</keyword>
                    <keyword>cumSum</keyword>
                    <keyword>Data</keyword>
                    <keyword>Buff</keyword>
                </context>
                
                <context id="misc" style-ref="misc">
                    <keyword>Pause</keyword>
                    <keyword>FnInt</keyword>
                    <keyword>FnOn</keyword>
                    <keyword>FnOff</keyword>
                    <keyword>Stop</keyword>
                    <keyword>LnReg</keyword>
                </context>

                <!-- Specials -->
                <context id="functions" style-ref="functions">
                    <keyword>(Lbl\s|Goto\s|sub\()[0-9a-zA-Z]{1,5}</keyword>
                    <keyword>[0-9a-zA-Z]{1,5}\(</keyword>
                    <keyword>\%{functionmodifier}[0-9a-zA-Z]{1,5}</keyword>
                </context>

                <context id="modifiers" style-ref="modifiers">
                    <keyword>\%{pi}</keyword>
                    <keyword>\%{rmodifer}</keyword>
                    <keyword>(\%{rmodifer}{2}|rr^^|^^rr)</keyword>
                    <keyword>\%{dereference}</keyword>
                    <keyword>\%{functionmodifier}</keyword>
                    <keyword>(^^T|T^^|)</keyword>
                </context>

                <context id="operators" style-ref="operators">
                    <keyword>\!\=|\=\/\=|≠|\=\!</keyword>
                    <keyword>&lt;</keyword>
                    <keyword>&gt;</keyword>
                    <keyword>&lt;\=|\=&lt;|≤</keyword>
                    <keyword>&gt;\=|\=&gt;|≥</keyword>
                    <keyword>or</keyword>
                    <keyword>and</keyword>
                    <keyword>xor</keyword>
                    <keyword>\+</keyword>
                    <keyword>-</keyword>
                    <keyword>\~</keyword>
                    <keyword>\*</keyword>
                    <keyword>\/</keyword>
                    <keyword>\^</keyword>
                    <keyword>\=</keyword>
                    <keyword>·|plotdot|plotand</keyword>
                    <keyword>plotplus|plotcross|plotor</keyword>
                    <keyword>☐|plotsquare|plotxor</keyword>
                    <keyword>not</keyword>
                    <keyword>e</keyword>
                    <keyword>ee</keyword>
                    <keyword>\^\-1</keyword>
                    <keyword>abs</keyword>
                    <keyword>sqrt</keyword>
                    <keyword>√</keyword>
                    <keyword>sin</keyword>
                    <keyword>cos</keyword>
                    <keyword>e\^</keyword>
                    <keyword>ln</keyword>
                    <keyword>min</keyword>
                    <keyword>max</keyword>
                    <keyword>rand</keyword>
                </context>

                <context id="comment" style-ref="comment" end-at-line-end="true" class="comment">
                    <start>\.</start>
                    <end>$</end>
                </context>
            </include>
        </context>
    </definitions>

</language>
    
