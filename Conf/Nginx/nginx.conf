# http://www.codestance.com/tutorials-archive/nginx-tuning-for-best-performance-255
# https://www.linode.com/docs/websites/nginx/configure-nginx-for-optimized-performance
# https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
# https://www.digitalocean.com/community/questions/opitmizing-nginx-on-ubuntu-14-04

user devaneando;

pid /run/nginx.pid;

# ●▬▬▬▬▬๑۩  Processes and connections ۩๑▬▬▬▬▬●

# This value should be: `grep ^processor /proc/cpuinfo | wc -l`
worker_processes 1;

# Each connection needs a file.
# This value should be the worker_connections * worker_processes 
worker_rlimit_nofile 1024;

# ●▬▬▬▬▬๑۩  Logs ۩๑▬▬▬▬▬●

# Custom log formats
log_format minimal '[$time_local] $remote_addr ($status) "$request"'

# only log critical errors
error_log /var/log/nginx/error.log crit;

# to boost IO on HDD we can disable access logs
access_log off;

events {
    # The max value here should be: `ulimit -n`
	worker_connections 1024;
    
    # Epoll makes sure that I/O is utilized to the best of its ability
    use epoll
    
    # This accepts all new connections at once
	multi_accept on;
}

http {

    # ●▬▬▬▬▬๑۩  Connections ۩๑▬▬▬▬▬●

    # One the connection reaches this limit, it's closed
    keepalive_requests 100;
    
    # The connection will close after this time
    keepalive_timeout 30;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;
   
    # request timeout
    client_header_timeout  20;

    # request timed out -- default 60
    client_body_timeout 10;

    # if client stop responding, free up memory -- default 60
    send_timeout 10;

    # ●▬▬▬▬▬๑۩  Data transfer ۩๑▬▬▬▬▬●

    # copies data between one FD and other from within the kernel
    # faster then read() + write()
    sendfile on;

    # send headers in one peace, its better then sending them one by one 
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    # ●▬▬▬▬▬๑۩  Static data ۩๑▬▬▬▬▬●

    # internal parameter to speed up hashtable lookups
	types_hash_max_size 2048;

    # cache informations about FDs, frequently accessed files
    # can boost performance, but you need to test those values
    open_file_cache max=200000 inactive=20s; 
    open_file_cache_valid 30s; 
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # reduce the data that needs to be sent over network
    gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

    # ●▬▬▬▬▬๑۩  SSL ۩๑▬▬▬▬▬●

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

    # ●▬▬▬▬▬๑۩  Virtual hosts ۩๑▬▬▬▬▬●
	
    include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;

}
