# tell the kernel to only swap if it really needs it
vm.swappiness = 10
# Improve cache management
vm.vfs_cache_pressure = 50
# increase the number of allowed mmapped files
vm.max_map_count = 1048576
# increase the number of file handles available globally
# this value should be around around 1 per 128 KB of system memory (8000 per 1Gb).
fs.file-max = 64000
# allow up to 999999 processes with corresponding pids
# this looks nice and rarely rolls over - I've never had a problem with it.
kernel.pid_max = 999999 # unnecessary, but I like it
# seconds to delay after a kernel panic and before rebooting automatically
kernel.panic = 60

# do not enable if your machines are not physically secured
# this can be used to force reboots, kill processses, cause kernel crashes,
# etc without logging in
# but it's very handy when a machine is hung and you need to get control
# that said, I always enable it
kernel.sysrq = 1

# hese are improved defaults for opening up the Linux network stack.
# I recommend Googling "Linux C10k" to learn more about what they mean.
net.ipv4.ip_local_port_range = 10000 65535
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_rmem = 4096 87380 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
net.core.netdev_max_backlog = 2500
net.core.somaxconn = 65000

# Disable IPV6
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1

# Raise inotify
fs.inotify.max_user_watches=524288

# Check https://lonesysadmin.net/2013/12/22/better-linux-disk-caching-performance-vm-dirty_ratio/
# To tune, execute sudo sysctl -a | grep dirty

# is the percentage of system memory that can be filled with
# “dirty” pages (memory pages that still need to be written to disk) before the pdflush/flush/kdmflush background
# processes kick in to write it to disk. The value below is 10%. If the machine has 8GB the this would mean 3.2GB of
# data that can be sitting in RAM before something is done.
vm.dirty_background_ratio = 40

# is the absolute maximum amount of system memory that can be filled with dirty pages before everything must get
# committed to disk. When the system gets to this point all new I/O blocks until dirty pages have been written to disk.
# This is often the source of long I/O pauses, but is a safeguard against too much data being cached unsafely in memory.
vm.dirty_ratio = 50

# vm.dirty_background_bytes and vm.dirty_bytes are another way to specify these parameters. If you set the _bytes
# version the _ratio version will become 0, and vice-versa.
vm.dirty_background_bytes = 0
vm.dirty_bytes = 0

# is how long something can be in cache before it needs to be written. In this case it’s 30 seconds.
# When the pdflush/flush/kdmflush processes kick in they will check to see how old a dirty page is, and if it’s older
# than this value it’ll be written asynchronously to disk. Since holding a dirty page in memory is unsafe this is
# also a safeguard against data loss.
vm.dirty_expire_centisecs = 3000

# is how often the pdflush/flush/kdmflush processes wake up and check to see if work needs to be done.
# To check statistcs execute cat /proc/vmstat | egrep "dirty|writeback". The nr_dirty value will be the number of
# dirty pages waiting to be written to disk.
vm.dirty_writeback_centisecs = 500

# increase the sysv ipc limits
kernel.shmmax = 33554432
kernel.msgmax = 33554432
kernel.msgmnb = 33554432

